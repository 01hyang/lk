#ifndef __INCLUDE_PLATFORM_AT32AP7_H
#define __INCLUDE_PLATFORM_AT32AP7_H

/* memory map */
#define SRAM_CS0_BASE	(0x0)
#define SRAM_CS4_BASE	(0x04000000)
#define SRAM_CS2_BASE	(0x08000000)
#define SRAM_CS3_BASE	(0x0c000000)
#define SRAM_CS1_BASE	(0x10000000)
#define SDRAM_BASE		(0x10000000)
#define SRAM_CS5_BASE	(0x20000000)
#define ISRAM0_BASE		(0x24000000)
#define ISRAM1_BASE		(0x24004000)
#define LCDC_BASE		(0xff000000)
#define DMACA_BASE		(0xff200000)
#define USBA_BASE		(0xff300000)
#define PBA_BASE		(0xffe00000)
#define PBB_BASE		(0xfff00000)

/* peripheral bases */
#define SPI0_BASE		(PBA_BASE + 0x0)
#define SPI1_BASE		(PBA_BASE + 0x400)
#define TWI_BASE		(PBA_BASE + 0x800)
#define USART0_BASE		(PBA_BASE + 0xc00)
#define USART1_BASE		(PBA_BASE + 0x1000)
#define USART2_BASE		(PBA_BASE + 0x1400)
#define USART3_BASE		(PBA_BASE + 0x1800)
#define SSC0_BASE		(PBA_BASE + 0x1c00)
#define SSC1_BASE		(PBA_BASE + 0x2000)
#define SSC2_BASE		(PBA_BASE + 0x2400)
#define PIOA_BASE		(PBA_BASE + 0x2800)
#define PIOB_BASE		(PBA_BASE + 0x2c00)
#define PIOC_BASE		(PBA_BASE + 0x3000)
#define PIOD_BASE		(PBA_BASE + 0x3400)
#define PIOE_BASE		(PBA_BASE + 0x3800)
#define PSIF_BASE		(PBA_BASE + 0x3c00)

#define PM_BASE			(PBB_BASE + 0x0)
#define RTC_BASE		(PBB_BASE + 0x80)
#define WDT_BASE		(PBB_BASE + 0xb0)
#define EIC_BASE		(PBB_BASE + 0x100)
#define INTC_BASE		(PBB_BASE + 0x400)
#define HMATRIX_BASE	(PBB_BASE + 0x800)
#define TC0_BASE		(PBB_BASE + 0xc00)
#define TC1_BASE		(PBB_BASE + 0x1000)
#define PWM_BASE		(PBB_BASE + 0x1400)
#define MACB0_BASE		(PBB_BASE + 0x1800)
#define MACB1_BASE		(PBB_BASE + 0x1c00)
#define ABDAC_BASE		(PBB_BASE + 0x2000)
#define MCI_BASE		(PBB_BASE + 0x2400)
#define AC97_BASE		(PBB_BASE + 0x2800)
#define ISI_BASE		(PBB_BASE + 0x2c00)
#define USBA_CONFIG_BASE	(PBB_BASE + 0x3000)
#define SMC_BASE		(PBB_BASE + 0x3400)
#define SDRAMC_BASE		(PBB_BASE + 0x3800)
#define ECC_BASE		(PBB_BASE + 0x3c00)

/* interrupt vectors */
#define INT_GROUP_COUNT		64
#define INT_GROUP_SHIFT 	5
#define INT_GROUP_MASK		(0x3f << INT_GROUP_SHIFT)	
#define INT_LINE_MASK		(0x1f)	
#define INT_VECTOR(group, line)	(((group) << INT_GROUP_SHIFT) | (line))

#define INT_COUNT_COMPARE_MATCH		INT_VECTOR(0, 0)
#define INT_PERF_COUNTER_OVERFLOW	INT_VECTOR(0, 1)
#define INT_LCDC_EOF				INT_VECTOR(1, 0)
#define INT_LCDC_LN					INT_VECTOR(1, 1)
#define INT_LCDC_LSTLN				INT_VECTOR(1, 2)
#define INT_LCDC_MER				INT_VECTOR(1, 3)
#define INT_LCDC_OWR				INT_VECTOR(1, 4)
#define INT_LCDC_UFLW				INT_VECTOR(1, 5)
#define INT_DMACA_BLOCK				INT_VECTOR(2, 0)
#define INT_DMACA_DSTT				INT_VECTOR(2, 1)
#define INT_DMACA_ERR				INT_VECTOR(2, 2)
#define INT_DMACA_SRCT				INT_VECTOR(2, 3)
#define INT_DMACA_TFR				INT_VECTOR(2, 4)
#define INT_SPI0					INT_VECTOR(3, 0)
#define INT_SPI1					INT_VECTOR(4, 0)
#define INT_TWI						INT_VECTOR(5, 0)
#define INT_USART0					INT_VECTOR(6, 0)
#define INT_USART1					INT_VECTOR(7, 0)
#define INT_USART2					INT_VECTOR(8, 0)
#define INT_USART3					INT_VECTOR(9, 0)
#define INT_SSC0					INT_VECTOR(10, 0)
#define INT_SSC1					INT_VECTOR(11, 0)
#define INT_SSC2					INT_VECTOR(12, 0)
#define INT_PIOA					INT_VECTOR(13, 0)
#define INT_PIOB					INT_VECTOR(14, 0)
#define INT_PIOC					INT_VECTOR(15, 0)
#define INT_PIOD					INT_VECTOR(16, 0)
#define INT_PIOE					INT_VECTOR(17, 0)
#define INT_PSIF					INT_VECTOR(18, 0)
#define INT_EIC0					INT_VECTOR(19, 0)
#define INT_EIC1					INT_VECTOR(19, 1)
#define INT_EIC2					INT_VECTOR(19, 2)
#define INT_EIC3					INT_VECTOR(19, 3)
#define INT_PM						INT_VECTOR(20, 0)
#define INT_RTC						INT_VECTOR(21, 0)
#define INT_TC00					INT_VECTOR(22, 0)
#define INT_TC01					INT_VECTOR(22, 1)
#define INT_TC02					INT_VECTOR(22, 2)
#define INT_TC10					INT_VECTOR(23, 0)
#define INT_TC11					INT_VECTOR(23, 1)
#define INT_TC12					INT_VECTOR(23, 2)
#define INT_PWM						INT_VECTOR(24, 0)
#define INT_MACB0					INT_VECTOR(25, 0)
#define INT_MACB1					INT_VECTOR(26, 0)
#define INT_ABDAC					INT_VECTOR(27, 0)
#define INT_MCI						INT_VECTOR(28, 0)
#define INT_AC97C					INT_VECTOR(29, 0)
#define INT_ISI						INT_VECTOR(30, 0)
#define INT_USBA					INT_VECTOR(31, 0)
#define INT_EBI						INT_VECTOR(32, 0)

/* PM block */
#define PM_MCCTRL					(PM_BASE + 0x00)
#define PM_CKSEL					(PM_BASE + 0x04)
#define PM_CPUMASK					(PM_BASE + 0x08)
#define PM_HSBMASK					(PM_BASE + 0x0c)
#define PM_PBAMASK					(PM_BASE + 0x10)
#define PM_PBBMASK					(PM_BASE + 0x14)
#define PM_PLL0						(PM_BASE + 0x20)
#define PM_PLL1						(PM_BASE + 0x24)
#define PM_IER						(PM_BASE + 0x40)
#define PM_IDR						(PM_BASE + 0x44)
#define PM_IMR						(PM_BASE + 0x48)
#define PM_ISR						(PM_BASE + 0x4c)
#define PM_ICR						(PM_BASE + 0x50)
#define PM_GCCTRL0					(PM_BASE + 0x60)
#define PM_GCCTRL1					(PM_BASE + 0x64)
#define PM_GCCTRL2					(PM_BASE + 0x68)
#define PM_GCCTRL3					(PM_BASE + 0x6c)
#define PM_GCCTRL4					(PM_BASE + 0x70)
#define PM_GCCTRL5					(PM_BASE + 0x74)
#define PM_GCCTRL6					(PM_BASE + 0x78)
#define PM_GCCTRL7					(PM_BASE + 0x7c)
#define PM_RCAUSE					(PM_BASE + 0xc0)

/* clocks */
#define _CLOCK(group, x)			(((group) << 5) | (x))
#define CLOCK_TO_GROUP(clk)			((clk) >> 5)
#define CLOCK_IN_GROUP(clk)			((clk) & ((1<<5) - 1))
#define CLOCK_GROUP_CPU				0
#define CLOCK_GROUP_HSB				1
#define CLOCK_GROUP_PBA				2
#define CLOCK_GROUP_PBB				3
#define CLOCK_PICO					_CLOCK(CLOCK_GROUP_CPU, 0)
#define CLOCK_EBI					_CLOCK(CLOCK_GROUP_HSB, 0)
#define CLOCK_PBA					_CLOCK(CLOCK_GROUP_HSB, 1)
#define CLOCK_PBB					_CLOCK(CLOCK_GROUP_HSB, 2)
#define CLOCK_HRAMC					_CLOCK(CLOCK_GROUP_HSB, 3)
#define CLOCK_HSB_BRIDGE			_CLOCK(CLOCK_GROUP_HSB, 4)
#define CLOCK_ISI_HSB				_CLOCK(CLOCK_GROUP_HSB, 5)
#define CLOCK_USB_HSB				_CLOCK(CLOCK_GROUP_HSB, 6)
#define CLOCK_LCDC					_CLOCK(CLOCK_GROUP_HSB, 7)
#define CLOCK_MACB0_HSB				_CLOCK(CLOCK_GROUP_HSB, 8)
#define CLOCK_MACB1_HSB				_CLOCK(CLOCK_GROUP_HSB, 9)
#define CLOCK_DMA					_CLOCK(CLOCK_GROUP_HSB, 10)
#define CLOCK_SPI0					_CLOCK(CLOCK_GROUP_PBA, 0)
#define CLOCK_SPI1					_CLOCK(CLOCK_GROUP_PBA, 1)
#define CLOCK_TWI					_CLOCK(CLOCK_GROUP_PBA, 2)
#define CLOCK_USART0				_CLOCK(CLOCK_GROUP_PBA, 3)
#define CLOCK_USART1				_CLOCK(CLOCK_GROUP_PBA, 4)
#define CLOCK_USART2				_CLOCK(CLOCK_GROUP_PBA, 5)
#define CLOCK_USART3				_CLOCK(CLOCK_GROUP_PBA, 6)
#define CLOCK_SSC0					_CLOCK(CLOCK_GROUP_PBA, 7)
#define CLOCK_SSC1					_CLOCK(CLOCK_GROUP_PBA, 8)
#define CLOCK_SSC2					_CLOCK(CLOCK_GROUP_PBA, 9)
#define CLOCK_PIOA					_CLOCK(CLOCK_GROUP_PBA, 10)
#define CLOCK_PIOB					_CLOCK(CLOCK_GROUP_PBA, 11)
#define CLOCK_PIOC					_CLOCK(CLOCK_GROUP_PBA, 12)
#define CLOCK_PIOD					_CLOCK(CLOCK_GROUP_PBA, 13)
#define CLOCK_PIOE					_CLOCK(CLOCK_GROUP_PBA, 14)
#define CLOCK_PIOF					_CLOCK(CLOCK_GROUP_PBA, 15)
#define CLOCK_PDC					_CLOCK(CLOCK_GROUP_PBA, 16)
#define CLOCK_PM					_CLOCK(CLOCK_GROUP_PBB, 0)
#define CLOCK_INTC					_CLOCK(CLOCK_GROUP_PBB, 1)
#define CLOCK_HMATRIX				_CLOCK(CLOCK_GROUP_PBB, 2)
#define CLOCK_TC0					_CLOCK(CLOCK_GROUP_PBB, 3)
#define CLOCK_TC1					_CLOCK(CLOCK_GROUP_PBB, 4)
#define CLOCK_PWM					_CLOCK(CLOCK_GROUP_PBB, 5)
#define CLOCK_MACB0					_CLOCK(CLOCK_GROUP_PBB, 6)
#define CLOCK_MACB1					_CLOCK(CLOCK_GROUP_PBB, 7)
#define CLOCK_DAC					_CLOCK(CLOCK_GROUP_PBB, 8)
#define CLOCK_MCI					_CLOCK(CLOCK_GROUP_PBB, 9)
#define CLOCK_AC97C					_CLOCK(CLOCK_GROUP_PBB, 10)
#define CLOCK_ISI					_CLOCK(CLOCK_GROUP_PBB, 11)
#define CLOCK_USB					_CLOCK(CLOCK_GROUP_PBB, 12)
#define CLOCK_SMC					_CLOCK(CLOCK_GROUP_PBB, 13)
#define CLOCK_SDRAMC				_CLOCK(CLOCK_GROUP_PBB, 14)
#define CLOCK_ECC					_CLOCK(CLOCK_GROUP_PBB, 15)

/* UART */
#define UART_CR						(0)
#define UART_MR						(1)
#define UART_IER					(2)
#define UART_IDR					(3)
#define UART_IMR					(4)
#define UART_CSR					(5)
#define UART_RHR					(6)
#define UART_THR					(7)
#define UART_BRGR					(8)
#define UART_RTOR					(9)
#define UART_TTGR					(10)
#define UART_FIDI					(16)
#define UART_NER					(17)
#define UART_IFR					(19)
#define UART_MAN					(20)

/* interrupt controller */
#define INTC_IPR(x)					(INTC_BASE + 0x000 + ((x) * 4))
#define INTC_IRR(x)					(INTC_BASE + 0x100 + ((x) * 4))
#define INTC_ICR(x)					(INTC_BASE + 0x200 + ((x) * 4))

/* timer */
#define TC_CCR						(0x00)
#define TC_CMR						(0x04)
#define TC_CV						(0x10)
#define TC_RA						(0x14)
#define TC_RB						(0x18)
#define TC_RC						(0x1c)
#define TC_SR						(0x20)
#define TC_IER						(0x24)
#define TC_IDR						(0x28)
#define TC_IMR						(0x2c)

#define TC_CCRn(n)					(TC_CCR + 0x40 * (n))
#define TC_CMRn(n)					(TC_CMR + 0x40 * (n))
#define TC_CVn(n)					(TC_CV + 0x40 * (n))
#define TC_RAn(n)					(TC_RA + 0x40 * (n))
#define TC_RBn(n)					(TC_RB + 0x40 * (n))
#define TC_RCn(n)					(TC_RC + 0x40 * (n))
#define TC_SRn(n)					(TC_SR + 0x40 * (n))
#define TC_IERn(n)					(TC_IER + 0x40 * (n))
#define TC_IDRn(n)					(TC_IDR + 0x40 * (n))
#define TC_IMRn(n)					(TC_IMR + 0x40 * (n))

#define TC_BCR						(0xc0)
#define TC_BMR						(0xc4)

#endif

